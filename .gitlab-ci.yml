image: docker:20.10.6

# Run sequentially
stages:
  - build
  - push_readme
  - clean_up

services:
  - docker:20.10.6-dind

.docker_cache:
  cache:
    # The same key should be used across branches
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - ci-exports/*.tar

before_script:
  - docker info
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

alpine3.10: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:   
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    - docker stop $NAME
    - docker rm $NAME 
  rules:
  - if: $CI_PIPELINE_SOURCE == "push"
    changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
    when: always
  
alpine3.16.3: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    - docker stop $NAME
    - docker rm $NAME    
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always

alpine3.17.1: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    - docker stop $NAME
    - docker rm $NAME  
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always

alpine3.17.2: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  script:   
    
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    #- docker stop $NAME
    #- docker rm $NAME  
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always

centos8: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    - docker stop $NAME
    - docker rm $NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always
    

ubuntu18.04: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    - docker stop $NAME
    - docker rm $NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always 

hello: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    # Testing
    - chmod +x ./ci-build.sh
    - ./ci-build.sh $NAME
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    - docker stop $NAME
    - docker rm $NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always 

hello-plaintext: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    # Testing
    #- chmod +x ./ci-build.sh
    #- ./ci-build.sh $NAME
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    # - docker stop $NAME
    # - docker rm $NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
      when: always 



nginx1.21.1: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    
    - cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    - cp -R html/ Dockerfiles/$CI_JOB_NAME/
    - cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    - cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    - cp -R includes/ Dockerfiles/$CI_JOB_NAME/
    
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    # Testing
    #- chmod +x ./ci-build.sh
    #- ./ci-build.sh $NAME
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    # - docker stop $NAME
    # - docker rm $NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
        - includes/*
      when: always



stable: #CI_JOB_NAME
  extends:
    - .docker_cache
  stage: build
  variables:    
    NAME: nginx-$CI_JOB_NAME-$CI_PIPELINE_ID
    TAG: $CI_JOB_NAME
    TIME_ZONE: "America/Argentina/Buenos_Aires"
  
  script:   
    #- rsync -aP ./etc Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./html Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./snippets Dockerfiles/$CI_JOB_NAME/
    #- rsync -aP ./certs Dockerfiles/$CI_JOB_NAME/
    
    #- cp -R etc/ Dockerfiles/$CI_JOB_NAME/
    #- cp -R html/ Dockerfiles/$CI_JOB_NAME/
    #- cp -R snippets/ Dockerfiles/$CI_JOB_NAME/
    #- cp -R certs/ Dockerfiles/$CI_JOB_NAME/
    #- cp -R includes/ Dockerfiles/$CI_JOB_NAME/
    #- curl --create-dirs -O --output-dir Dockerfiles/$CI_JOB_NAME https://raw.githubusercontent.com/nginxinc/docker-nginx-unprivileged/main/stable/alpine/Dockerfile
    # Try to load latest branch image from local tar or from registry/tmp/receipes
    # Try to load latest branch image from local tar or from registry
    - docker load -i ci-exports/$CI_COMMIT_REF_SLUG.tar || docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$TAG || true 
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH:$TAG -t $NAME -t $CI_REGISTRY/$CI_PROJECT_PATH:$TAG Dockerfiles/$CI_JOB_NAME --build-arg $TIME_ZONE
    # Testing
    #- chmod +x ./ci-build.sh
    #- ./ci-build.sh $NAME
    # Saving
    - mkdir -p ci-exports/
    - docker save $CI_REGISTRY/$CI_PROJECT_PATH:$TAG > ci-exports/$CI_COMMIT_REF_SLUG.tar
    
    # Push to Gitlab Hub
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    #Push to Docker Hub
    - echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login -u "$DOCKERHUB_REGISTRY_USER" --password-stdin "$DOCKERHUB_REGISTRY"
    - cat ci-exports/$CI_COMMIT_REF_SLUG.tar | docker load
    - docker tag $NAME $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker push $DOCKERHUB_REGISTRY/$CI_PROJECT_PATH:$TAG
    - docker logout
    
    # Stop and remove, comment for dev  
    # - docker stop $NAME
    # - docker rm $NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/${CI_JOB_NAME}/*
        - html/*
        - etc/*
        - snippets/*
        - includes/*
      when: always




















# Push the readme to dockerhub
push_readme_to_docker_hub:
  stage: push_readme
  script:  
    - >-
     docker run --rm -v $PWD:/workspace \
      -e DOCKERHUB_USERNAME="$DOCKERHUB_REGISTRY_USER" \
      -e DOCKERHUB_PASSWORD="$DOCKERHUB_REGISTRY_PASSWORD" \
      -e DOCKERHUB_REPOSITORY="$CI_PROJECT_PATH" \
      -e README_FILEPATH='/workspace/README.md' \
      peterevans/dockerhub-description:3
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - README.md
      when: always

# Clean up phase not really required but for UDF demos it could help prevent errors
clean_up:
  stage: clean_up
  script:
    - docker system prune -f
    - docker images
    - docker logout
  
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfiles/**/*
        - html/*
        - etc/*
        - snippets/*
        - includes/*
      when: always 
  